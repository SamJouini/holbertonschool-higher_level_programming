Testing the `add_integer` function in Python
============================================

This is a doctest file for testing the `add_integer` function in Python.
It provides examples and of how to use the function.
Expected usage: add two integers using 'add_integer' function.


Import file:
------------
>>> add_integer = __import__('0-add_integer').add_integer


Integers addition:
----------------
>>> add_integer(5, 2)
7

>>> add_integer(5, -2)
3

>>> add_integer(-5, 2)
-3

>>> add_integer(-5, -2)
-7


Floats addition:
--------------
>>> add_integer(5.5, 2.2)
7

>>> add_integer(5.5, -2.2)
3

>>> add_integer(-5.5, 2.2)
-3

>>> add_integer(-5.5, -2.2)
-7


Integer and floats addition:
--------------------------
>>> add_integer(5, 2.2)
7

>>> add_integer(5.5, -2)
3

>>> add_integer(-5.2, 2)
-3

>>> add_integer(-5, -2.5)
-7


Adding nothing :
-----------------
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'


Handling Invalid Input:
----------------------- 
>>> add_integer("five", 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(5, "two")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer("five", "two")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer("5", 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(2)
100


Other errors:
--------------

>>> add_integer(float('inf'), 3)
Traceback (most recent call last):
...
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('NaN'), 3)
Traceback (most recent call last):
...
ValueError: cannot convert float NaN to integer